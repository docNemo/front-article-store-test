apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
  app: ${APPLICATION_NAME}
labels:
  template: ${APPLICATION_NAME}-template
  app: ${APPLICATION_NAME}
objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: ${APPLICATION_NAME}
      generation: 1
      labels:
        name: ${APPLICATION_NAME}
        app: ${APPLICATION_NAME}
    spec:
      replicas: 1
      strategy:
        type: Rolling
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
      triggers:
        - type: ConfigChange
      revisionHistoryLimit: 10
      progressDeadlineSeconds: 600
      selector:
        app: ${APPLICATION_NAME}
        deploymentConfig: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
        spec:
          restartPolicy: Always
          serviceAccountName: builder
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 60
          securityContext: {}
          dnsPolicy: ClusterFirst
          containers:
            - name: ${APPLICATION_NAME}
              image: ${IMAGE}@${IMAGE_SHA}
              imagePullPolicy: Always
              ports:
                - containerPort: ${{HOST_PORT}}
                  name: http
                  protocol: TCP
              resources:
                limits:
                  cpu: ${{LIMITS_CPU}}
                  memory: ${LIMITS_MEMORY}
                requests:
                  cpu: ${{REQUESTS_CPU}}
                  memory: ${REQUESTS_MEMORY}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              env:
                - name: APPLICATION_NAME
                  value: ${APPLICATION_NAME}
          volumes:
            - name: nginx-conf
              configMap:
                name: ${APPLICATION_NAME}-nginx-conf
                defaultMode: 420

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        - name: http-${HOST_PORT}
          port: ${{HOST_PORT}}
      selector:
        app: ${APPLICATION_NAME}
        deploymentConfig: ${APPLICATION_NAME}
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      host: ${APPLICATION_NAME}.${OS_ROUTE}
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
      port:
        targetPort: ${{HOST_PORT}}
    
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}-nginx-conf
    data:
      nginx.conf: |-
        worker_processes auto;
        error_log /var/log/nginx/error.log;
        pid /var/run/nginx.pid;

        # include /etc/nginx/modules/*.so;

        events {
            worker_connections  1024;
        }

        http {
            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

            access_log  /var/log/nginx/access.log  main;

            sendfile        on;
            tcp_nopush      on;
            tcp_nodelay     on;
            keepalive_timeout  65;
            types_hash_max_size 2048;

            #include       /etc/nginx/mime.types;
            default_type  application/octet-stream;
            include /etc/nginx.d/*.conf;

            server {
                gzip on;
                gzip_types   text/plain application/xml application/x-javascript text/css;
                listen       80 default_server;
                listen       [::]:80 default_server;
                server_name  _;
                root         /app;

                # Load configuration files for the default server block.
                include      /etc/nginx.default.d/*.conf;

                index index.html index.htm;

                location / {
                    try_files $uri $uri/ /index.html;
                }

                # Mediz images, icons, video, adio, HTC
                location ~* \*(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|otf)$ {
                    expires 1y;
                    access_log off;
                    add_header Cache-Control "public";
                }

                # Javascript and CSS files
                location ~* \*(?:css|js)$ {
                    try_files $uri =404;
                    expires 1y;
                    access_log off;
                    add_header Cache-Control "public";
                }

                location ~^.+\//+$ {
                    try_files $uri =404;
                }
            }
        }


parameters:
  - name: APPLICATION_NAME
    required: true
  - name:   IMAGE
    required: true
  - name:   IMAGE_SHA
    required: true
  - name:   HOST_PORT
    required: true
  - name:   OS_ROUTE
    required: true
  - name:   LIMITS_CPU
    required: true
    value: '1'
  - name:   LIMITS_MEMORY
    required: true
    value: '500Mi'
  - name:   REQUESTS_CPU
    required: true
    value: '1'
  - name:   REQUESTS_MEMORY
    required: true
    value: '500Mi'
